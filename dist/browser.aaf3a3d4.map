{"version":3,"sources":["src/widgets/progress-bar/styles.js","src/widgets/progress-bar/template.js","src/widgets/progress-bar/progress-bar.js","src/widgets/progress-bar/index.js","src/widgets/index.js","src/browser.js"],"names":["modalBackgroundColor","contentBackgroundColor","borderColor","borderLightColor","contentBorder","headerBorder","modalShadow","themeColor","styles","templateString","ProgressBar","attachShadow","mode","shadowRoot","innerHTML","html","modal","initialize","trigger","querySelector","addEventListener","showModal","hideModal","classList","add","remove","HTMLElement","$window","SummonWidgets","window"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,oBAAoB,qBAA1B;AAAiD;;AACjD,IAAMC,sBAAsB,YAA5B;AACA,IAAMC,WAAW,SAAjB;AACA,IAAMC,gBAAgB,uBAAtB;AACA,IAAMC,aAAa,uBAAgBF,WAAhB,MAAnB;AACA,IAAMG,YAAY,uBAAgBF,gBAAhB,CAAlB;AACA,IAAMG,WAAW,+DAAjB,EAEA;;AACA,IAAMC,UAAU,YAAhB;AAEA,IAAMC,MAAM,gZAaYR,oBAbZ,0GAmBYC,sBAnBZ,gEAsBEG,aAtBF,0EAyBME,WAzBN,mxBA2ESD,YA3ET,qGAAZ;eAuFeG;;;;;;;;;;AClGf;;;;AAEA,IAAMC,cAAc,4BAEdD,eAFc,miBAApB;eA4BeC;;;;;;;;;;AC9Bf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMC;;;;;AACJ,yBAAc;AAAA;;AAAA;;AACZ,sFADY,CAGZ;;AACA,UAAKC,YAAL,CAAkB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB,EAJY,CAMZ;;;AACA,UAAKC,UAAL,CAAgBC,SAAhB,GAA4BC,iBAA5B;AAEA,UAAKC,KAAL,GAAa,IAAb;AATY;AAUb;;;;wCAEmB;AAClB,WAAKC,UAAL;AACD;;;iCAEY;AAAA;;AACX,UAAMC,OAAO,GAAG,KAAKL,UAAL,CAAgBM,aAAhB,CAA8B,UAA9B,CAAhB;AACAD,MAAAA,OAAO,CAACE,gBAAR,CAAyB,OAAzB,EAAkC;AAAA,eAAM,MAAI,CAACC,SAAL,EAAN;AAAA,OAAlC;AAEA,WAAKL,KAAL,GAAa,KAAKH,UAAL,CAAgBM,aAAhB,CAA8B,QAA9B,CAAb;AAEA,WAAKN,UAAL,CACGM,aADH,CACiB,QADjB,EAEGC,gBAFH,CAEoB,OAFpB,EAE6B;AAAA,eAAM,MAAI,CAACE,SAAL,EAAN;AAAA,OAF7B,EANW,CAUX;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;gCAEW;AACV,WAAKN,KAAL,CAAWO,SAAX,CAAqBC,GAArB,CAAyB,YAAzB;AACD;;;gCAEW;AACV,WAAKR,KAAL,CAAWO,SAAX,CAAqBE,MAArB,CAA4B,YAA5B;AACD;;;;mBA1CuBC;;eA6CXhB;;;;;;;;;;AC/Cf;;;;eAEeA;;;;;;;;;;ACFf;;;;eAEe;AACbA,EAAAA,WAAW,EAAXA;AADa;;;;;ACFf;;;;AAEA;AACA,CAAC,UAACiB,OAAD,EAAa;AACZA,EAAAA,OAAO,CAACC,aAAR,GAAwBA,gBAAxB;AACD,CAFD,EAEGC,MAFH","file":"browser.aaf3a3d4.map","sourceRoot":"..","sourcesContent":["const modalBackgroundColor = `rgba(0,0,0,0.4);`; /* Black w/ opacity */\nconst contentBackgroundColor = `#fefefe`;\nconst borderColor = `#888`;\nconst borderLightColor = `rgba(8, 8, 8, 0.3)`;\nconst contentBorder = `1px solid ${borderColor};`;\nconst headerBorder = `1px solid ${borderLightColor}`;\nconst modalShadow = ` 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)`;\n\n// Color which will be used as background for header and footer of modal.\nconst themeColor = `#5cb85c`;\n\nconst styles = `\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    padding-top: 100px; /* Location of the box */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: ${modalBackgroundColor}\n}\n\n/* Modal Content */\n.modal-content {\n    position: relative;\n    background-color: ${contentBackgroundColor};\n    margin: auto;\n    padding: 0;\n    border: ${contentBorder};\n    border-radius: 5px;\n    width: 80%;\n    box-shadow: ${modalShadow};\n    -webkit-animation-name: animateTop;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animateTop;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animateTop {\n    from {\n        top:-300px;\n        opacity:0;\n    } \n    to {\n        top:0;\n        opacity:1\n    }\n}\n\n@keyframes animateTop {\n    from {\n        top:-300px; \n        opacity:0\n    }\n    to {\n        top:0;\n        opacity:1\n    }\n}\n\n/* The Close Button */\n.close {\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-open {\n    display: block;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    border-bottom: ${headerBorder};\n}\n\n.modal-body {\n    padding: 2px 16px;\n}\n\n.modal-footer {\n    padding: 2px 16px;\n}\n`;\n\nexport default styles;\n","import styles from './styles';\n\nconst templateString = `\n<style>\n    ${styles}\n</style>\n<!-- Trigger button/Opens the modal -->\n<button class=\"trigger\">Show progress</button>\n\n<!-- The Modal -->\n<div class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <span class=\"close\">&times;</span>\n      <h2>Modal Header</h2>\n    </div>\n    <div class=\"modal-body\">\n      <p>Some text in the Modal Body</p>\n      <p>Some other text...</p>\n    </div>\n    <div class=\"modal-footer\">\n      <h3>Modal Footer</h3>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport default templateString;\n","import html from './template';\n\nclass ProgressBar extends HTMLElement {\n  constructor() {\n    super();\n\n    // Attaching a shadow root.\n    this.attachShadow({ mode: 'open' });\n\n    // Providing HTML to shadow root.\n    this.shadowRoot.innerHTML = html;\n\n    this.modal = null;\n  }\n\n  connectedCallback() {\n    this.initialize();\n  }\n\n  initialize() {\n    const trigger = this.shadowRoot.querySelector('.trigger');\n    trigger.addEventListener('click', () => this.showModal());\n\n    this.modal = this.shadowRoot.querySelector('.modal');\n\n    this.shadowRoot\n      .querySelector('.close')\n      .addEventListener('click', () => this.hideModal());\n\n    // TODO: Handle outside click to dismiss modal.\n    // // When the user clicks anywhere outside of the modal, close it\n    // window.onclick = (event) => {\n    //     if (event.target == modal) {\n    //         this.hideModal();\n    //     }\n    // }\n  }\n\n  showModal() {\n    this.modal.classList.add('modal-open');\n  }\n\n  hideModal() {\n    this.modal.classList.remove('modal-open');\n  }\n}\n\nexport default ProgressBar;\n","import ProgressBar from './progress-bar';\n\nexport default ProgressBar;\n","import ProgressBar from './progress-bar';\n\nexport default {\n  ProgressBar\n};\n","import SummonWidgets from './widgets';\n\n// Registering widget to `window` object so they can be accessed in browser.\n(($window) => {\n  $window.SummonWidgets = SummonWidgets;\n})(window);\n"]}